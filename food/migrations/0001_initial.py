# Generated by Django 5.2.6 on 2025-09-18 10:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField()),
                ('ingredients', models.TextField()),
                ('calories', models.PositiveIntegerField()),
                ('protein', models.FloatField(help_text='g Protein')),
                ('carbohydrates', models.FloatField(help_text='g Carbohydrates')),
                ('fat', models.FloatField(help_text='g Fat')),
                ('food_type', models.CharField(choices=[('lean', 'Lean'), ('dense', 'Dense')], max_length=10)),
                ('category', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch_dinner', 'Lunch & Dinner')], max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='food_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='food.cart')),
                ('food_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food.fooditem')),
            ],
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_count', models.PositiveSmallIntegerField(choices=[(15, '15 meals'), (21, '21 meals')])),
                ('days', models.PositiveSmallIntegerField(choices=[(5, '5 days'), (7, '7 days')])),
                ('density', models.CharField(choices=[('lean', 'Lean'), ('dense', 'Dense')], max_length=10)),
                ('is_custom', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=80, unique=True)),
                ('meals', models.ManyToManyField(blank=True, to='food.fooditem')),
            ],
            options={
                'ordering': ('meal_count', 'days', 'density'),
                'unique_together': {('meal_count', 'days', 'density')},
            },
        ),
        migrations.CreateModel(
            name='UserMealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('meal_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food.mealplan')),
                ('selected_meals', models.ManyToManyField(blank=True, related_name='user_selected_meals', to='food.fooditem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
